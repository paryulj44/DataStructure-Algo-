ques :- remove last and add front
solution :- https://www.geeksforgeeks.org/move-last-element-to-front-of-a-given-linked-list/

ques :- add 1 to element ( https://practice.geeksforgeeks.org/problems/add-1-to-a-number-represented-as-linked-list/1)

solution :- 
public static Node reverse(Node head){
        Node prev = null, curr = head, ahead = null;
        while(curr != null){
            ahead = curr.next;
            curr.next = prev;
            prev = curr;
            curr = ahead;
        }
        return prev;
    }
    
    public static Node addOne(Node head) 
    { 
        head = reverse(head);
        // res is head node of the resultant list
        Node res = head;
        Node temp = null;
        int carry = 1, sum;
  
        while (head != null) // while both lists exist
        {
            // Calculate value of next digit in resultant
            // list. The next digit is sum of following
            // things (i) Carry (ii) Next digit of head list
            // (if there is a next digit)
            sum = carry + head.data;
  
            // update carry for next calculation
            carry = (sum >= 10) ? 1 : 0;
  
            // update sum if it is greater than 10
            sum = sum % 10;
  
            // Create a new node with sum as data
            head.data = sum;
  
            // Move head and second pointers to next nodes
            temp = head;
            head = head.next;
        }
  
        // if some carry is still there, add a new node to
        // result list.
        if (carry > 0)
            temp.next = new Node(carry);
  
        // return head of the resultant list
        return reverse(res);
        }
